// monitor.js
const axios = require('axios');

// –ö–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—è
const TELEGRAM_BOT_TOKEN = process.env.TELEGRAM_BOT_TOKEN;
const TELEGRAM_CHAT_ID = process.env.TELEGRAM_CHAT_ID;

// –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–∞–Ω–∏—Ö –∑ DTEK
async function getDTEKData() {
  try {
    const response = await axios({
      method: 'POST',
      url: 'https://www.dtek-krem.com.ua/ua/ajax',
      headers: {
        'accept': 'application/json, text/javascript, */*; q=0.01',
        'accept-language': 'uk-UA,uk;q=0.9,en-US;q=0.8,en;q=0.7',
        'content-type': 'application/x-www-form-urlencoded; charset=UTF-8',
        'origin': 'https://www.dtek-krem.com.ua',
        'referer': 'https://www.dtek-krem.com.ua/ua/shutdowns',
        'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36',
        'x-requested-with': 'XMLHttpRequest'
      },
      data: 'method=getHomeNum&data%5B0%5D%5Bname%5D=city&data%5B0%5D%5Bvalue%5D=%D0%9A%D1%80%D1%8E%D0%BA%D1%96%D0%B2%D1%89%D0%B8%D0%BD%D0%B0&data%5B1%5D%5Bname%5D=street&data%5B1%5D%5Bvalue%5D=%D0%9F%D1%80%D0%B8%D0%BE%D0%B7%D0%B5%D1%80%D0%BD%D0%B0&data%5B2%5D%5Bname%5D=house_num&data%5B2%5D%5Bvalue%5D=&data%5B3%5D%5Bname%5D=updateFact&data%5B3%5D%5Bvalue%5D=' + encodeURIComponent(new Date().toLocaleString('uk-UA'))
    });
    
    return response.data;
  } catch (error) {
    console.error('–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ—Ç—Ä–∏–º–∞–Ω–Ω—ñ –¥–∞–Ω–∏—Ö –∑ DTEK:', error.message);
    return null;
  }
}

// –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –≤—ñ–¥–ø—Ä–∞–≤–∫–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤ Telegram
async function sendTelegramMessage(message) {
  if (!TELEGRAM_BOT_TOKEN || !TELEGRAM_CHAT_ID) {
    console.log('‚ùå Telegram —Ç–æ–∫–µ–Ω–∏ –Ω–µ –Ω–∞–ª–∞—à—Ç–æ–≤–∞–Ω—ñ');
    return;
  }
  
  try {
    await axios.post(`https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendMessage`, {
      chat_id: TELEGRAM_CHAT_ID,
      text: message,
      parse_mode: 'HTML'
    });
    console.log('‚úÖ –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ Telegram');
  } catch (error) {
    console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≤—ñ–¥–ø—Ä–∞–≤—Ü—ñ –≤ Telegram:', error.message);
  }
}

// –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —á–∏ —î –∑–∞–ø–æ–≤–Ω–µ–Ω—ñ –ø–æ–ª—è –¥–ª—è –±—É–¥–∏–Ω–∫—É 18
function checkHouse18(data) {
  if (!data || !data.result || !data.data || !data.data['18']) {
    return false;
  }
  
  const house18 = data.data['18'];
  
  // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ —î –∑–∞–ø–æ–≤–Ω–µ–Ω—ñ –ø–æ–ª—è (–Ω–µ –ø—É—Å—Ç—ñ —Ä—è–¥–∫–∏)
  return house18.sub_type !== '' || 
         house18.start_date !== '' || 
         house18.end_date !== '' || 
         house18.type !== '';
}

// –û—Å–Ω–æ–≤–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è
async function monitor() {
  console.log('üîç –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Å—Ç–∞–Ω—É –¥–ª—è –±—É–¥–∏–Ω–∫—É 18...');
  
  const data = await getDTEKData();
  if (!data) {
    await sendTelegramMessage('‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ –¥–∞–Ω—ñ –∑ DTEK');
    return;
  }
  
  console.log('üìä –î–∞–Ω—ñ –æ—Ç—Ä–∏–º–∞–Ω–æ —É—Å–ø—ñ—à–Ω–æ');
  
  if (checkHouse18(data)) {
    const house18 = data.data['18'];
    const message = `‚ö° <b>–£–í–ê–ì–ê! –Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –≤—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –µ–ª–µ–∫—Ç—Ä–æ–µ–Ω–µ—Ä–≥—ñ—ó (–±—É–¥–∏–Ω–æ–∫ 18)</b>\n\n` +
                   `üè† <b>–¢–∏–ø:</b> ${house18.type || '–ù–µ –≤–∫–∞–∑–∞–Ω–æ'}\n` +
                   `üìã <b>–ü—ñ–¥—Ç–∏–ø:</b> ${house18.sub_type || '–ù–µ –≤–∫–∞–∑–∞–Ω–æ'}\n` +
                   `üïê <b>–ü–æ—á–∞—Ç–æ–∫:</b> ${house18.start_date || '–ù–µ –≤–∫–∞–∑–∞–Ω–æ'}\n` +
                   `üïê <b>–ö—ñ–Ω–µ—Ü—å:</b> ${house18.end_date || '–ù–µ –≤–∫–∞–∑–∞–Ω–æ'}\n` +
                   `‚ÑπÔ∏è <b>–ü—Ä–∏—á–∏–Ω–∞:</b> ${house18.sub_type_reason ? house18.sub_type_reason.join(', ') : '–ù–µ –≤–∫–∞–∑–∞–Ω–æ'}\n` +
                   `‚è∞ <b>–û–Ω–æ–≤–ª–µ–Ω–æ:</b> ${data.updateTimestamp}`;
    
    await sendTelegramMessage(message);
    console.log('üö® –í–∏—è–≤–ª–µ–Ω—ñ –≤—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è! –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ');
  } else {
    console.log('‚úÖ –í—ñ–¥–∫–ª—é—á–µ–Ω—å –Ω–µ–º–∞—î');
  }
}

// –ó–∞–ø—É—Å–∫
monitor().catch(console.error);
